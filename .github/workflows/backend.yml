name: Backend Build and Push
on:
  pull_request:
    branches: ["dev"]
    paths:
      - 'backend1/**'
      - 'backend2/**'
  push:
    branches:
      - dev
    paths:
      - 'backend1/**'
      - 'backend2/**'
  workflow_dispatch:
env:
  REGISTRY: docker.io
  BACKEND1_IMAGE_NAME: samikshap85/backend1
  BACKEND2_IMAGE_NAME: samikshap85/backend2
jobs:
  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.head_ref == 'feature' || startsWith(github.head_ref, 'feature/')) && github.base_ref == 'dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'yarn'
          cache-dependency-path: |
            ./backend1/yarn.lock
            ./backend2/yarn.lock
      - name: Install Commitlint
        run: |
          npm install --save-dev @commitlint/cli @commitlint/config-conventional
      - name: Add commitlint config
        run: |
          echo "module.exports = {extends: ['@commitlint/config-conventional']};" > commitlint.config.js
      - name: Run Commitlint
        run: |
          git log origin/${{ github.base_ref }}..HEAD --pretty=format:"%s" | npx commitlint
  check_lint:
    runs-on: [backend]
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature') && github.base_ref == 'dev'
    needs: ["commitlint"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install packages of backend1
        working-directory: ./backend1
        run: yarn
      - name: Install packages of backend2
        working-directory: ./backend2
        run: yarn
      - name: Run lint on backend1
        working-directory: ./backend1
        run: yarn lint
      - name: Run lint on backend2
        working-directory: ./backend2
        run: yarn lint
  build_docker:
    runs-on: [backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      
      - name: Cache docker layers for backend1
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-backend1
          key: ${{ runner.os }}-buildx-backend1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend1-
      
      - name: Cache docker layers for backend2
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-backend2
          key: ${{ runner.os }}-buildx-backend2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend2-
      
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and Push Backend1 Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend1
          file: ./backend1/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:dev-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:dev-latest
          cache-from: type=local,src=/tmp/.buildx-cache-backend1
          cache-to: type=local,dest=/tmp/.buildx-cache-backend1
      
      - name: Build and Push Backend2 Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend2
          file: ./backend2/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:dev-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:dev-latest
          cache-from: type=local,src=/tmp/.buildx-cache-backend2
          cache-to: type=local,dest=/tmp/.buildx-cache-backend2
      - name: Save backend1 Docker Image as tar
        if: github.event_name == 'push'
        run: docker save ${{ env.REGISTRY }}/${{ env.BACKEND1_IMAGE_NAME }}:dev-${{ github.sha }} -o backend1.tar

      - name: Upload backend1 Image Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: backend2-image
          path: backend2.tar
      - name: Save backend1 Docker Image as tar
        if: github.event_name == 'push'
        run: docker save ${{ env.REGISTRY }}/${{ env.BACKEND2_IMAGE_NAME }}:dev-${{ github.sha }} -o backend2.tar

      - name: Upload backend2 Image Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: backend2-image
          path: backend2.tar